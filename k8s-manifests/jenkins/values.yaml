controller:
  # Correct image configuration format - as an object, not string
  image:
    registry: "603480426027.dkr.ecr.us-west-2.amazonaws.com"
    repository: "custom-jenkins"
    tag: "latest"
    pullPolicy: "Always"
  
  # Security context
  runAsUser: 0
  fsGroup: 0
  containerSecurityContext:
    privileged: true
  
  # Network configuration
  serviceType: LoadBalancer
  servicePort: 80
  targetPort: 8080
  serviceAnnotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
  
  # Volumes for Docker, AWS, and Tools
  volumes:
    - name: docker-sock
      hostPath:
        path: /var/run/docker.sock
    - name: aws-credentials
      secret:
        secretName: aws-credentials
        defaultMode: 0600
    - name: tools-volume
      emptyDir: {}
    - name: kubectl-config
      emptyDir: {}
  
  volumeMounts:
    - name: docker-sock
      mountPath: /var/run/docker.sock
    - name: aws-credentials
      mountPath: /home/jenkins/.aws/
      readOnly: true
    - name: tools-volume
      mountPath: /usr/local/bin-custom
    - name: kubectl-config
      mountPath: /home/jenkins/.kube/
  
  # Init container to install tools
  initContainers:
    - name: install-tools
      image: alpine:3.18
      command: ["/bin/sh"]
      args:
        - -c
        - |
          set -e
          echo "Installing kubectl..."
          apk add --no-cache curl
          KUBECTL_VERSION=$(curl -s https://dl.k8s.io/release/stable.txt)
          curl -LO "https://dl.k8s.io/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl"
          chmod +x kubectl
          mv kubectl /tools/
          
          echo "Installing AWS CLI..."
          apk add --no-cache python3 py3-pip
          pip3 install awscli
          cp /usr/bin/aws /tools/
          
          echo "Creating tool wrapper scripts..."
          cat > /tools/kubectl-wrapper << 'EOF'
          #!/bin/bash
          export KUBECONFIG=/var/run/secrets/kubernetes.io/serviceaccount/
          /tools/kubectl "$@"
          EOF
          chmod +x /tools/kubectl-wrapper
          
          echo "Tools installation completed!"
          ls -la /tools/
      volumeMounts:
        - name: tools-volume
          mountPath: /tools
  
  # Java options with additional PATH
  javaOpts: >-
    -Xmx3g
    -Djenkins.install.runSetupWizard=false
    -Dhudson.plugins.git.GitSCM.ALLOW_LOCAL_CHECKOUT=true

  # Environment variables for tools
  containerEnv:
    - name: PATH
      value: "/usr/local/bin-custom:/usr/local/bin:/usr/bin:/bin"
    - name: AWS_CONFIG_FILE
      value: "/home/jenkins/.aws/config"
    - name: AWS_SHARED_CREDENTIALS_FILE
      value: "/home/jenkins/.aws/credentials"
    - name: KUBECONFIG
      value: "/var/run/secrets/kubernetes.io/serviceaccount/token"

  # Admin credentials (use existing secret)
  admin:
    existingSecret: "jenkins-admin-creds"
    passwordKey: "JENKINS_ADMIN_PASSWORD"

  # Updated plugins list with email extension
  installPlugins:
    - kubernetes:4029.v5712230ccb_04
    - workflow-aggregator:596.v8c21c963d92d
    - git:5.0.0
    - configuration-as-code:1670.v564dc8b_982d0
    - bluegreen-deployer:1.5.0
    - docker-workflow:563.vd5d2e5c4007f
    - pipeline-stage-view:2.25
    - build-timeout:1.30
    - timestamper:1.25
    - ws-cleanup:0.45
    - ant:475.vf34069fef73c
    - gradle:2.8.2
    - workflow-support:839.v35e2736cfd5c
    - pipeline-graph-analysis:202.va_d268e64deb_3
    - pipeline-rest-api:2.32
    - handlebars:3.0.8
    - jquery:1.12.4-1
    - display-url-api:2.3.7
    - workflow-cps:3691.v28b_14c465da_b_
    - workflow-job:1400.v7fd111b_ec82f
    - apache-httpcomponents-client-4-api:4.5.14-150.v7a_b_9d17134a_5
    - workflow-scm-step:415.v434365564324
    - workflow-cps-global-lib:609.vd95673f149b_b
    - branch-api:2.1107.v06d90618a_32f
    - workflow-multibranch:756.v891d88f2cd46
    - authentication-tokens:1.4
    - docker-commons:439.va_3cb_0a_6a_2324
    - pipeline-milestone-step:111.v449306f708b_7
    - credentials:1271.v54b_1c877c6b_2
    - ssh-credentials:308.ve4497b_ccd8f4
    - credentials-binding:523.vd859a_4b_122e6
    - scm-api:676.v886669a_199a_a_
    - workflow-step-api:639.v6eca_cd8c04a_a_
    - mailer:448.v5b_97805e3767
    - junit:1217.v4297208a_a_b_ce
    - matrix-project:785.v06b_7f47b_c631
    - email-ext:2.96
    - build-user-vars-plugin:1.9

  # JCasC configuration with updated agent template
  JCasC:
    enabled: true
    configScripts:
      welcome-message: |
        jenkins:
          systemMessage: "Jenkins Blue-Green Deployment System"
          numExecutors: 5
          clouds:
            - kubernetes:
                containerCap: 10
                maxRequestsPerHost: 32
                jenkinsUrl: "http://jenkins.jenkins.svc.cluster.local:8080"
                name: "kubernetes"
                namespace: "jenkins"
                serverUrl: "https://kubernetes.default"
                podLabels:
                  - key: "jenkins/jenkins-jenkins-agent"
                    value: "true"
                templates:
                  - containers:
                      - args: "cat"
                        command: "/bin/sh -c"
                        image: "jenkins/inbound-agent:latest"
                        name: "jnlp"
                        ttyEnabled: true
                        workingDir: "/tmp"
                        envVars:
                          - envVar:
                              key: "PATH"
                              value: "/usr/local/bin:/usr/bin:/bin"
                    name: "default"
                    nodeUsageMode: "NORMAL"
                    podRetention: "never"
                    serviceAccount: "jenkins"
                    slaveConnectTimeout: 100
                    yamlMergeStrategy: "override"
                    volumes:
                      - hostPathVolume:
                          hostPath: "/var/run/docker.sock"
                          mountPath: "/var/run/docker.sock"
                      - secretVolume:
                          secretName: "aws-credentials"
                          mountPath: "/home/jenkins/.aws/"
                  - containers:
                      - args: "cat"
                        command: "/bin/sh -c"
                        image: "603480426027.dkr.ecr.us-west-2.amazonaws.com/jenkins-agent-tools:latest"
                        name: "jnlp"
                        ttyEnabled: true
                        workingDir: "/tmp"
                    name: "tools-agent"
                    nodeUsageMode: "NORMAL"
                    podRetention: "never"
                    serviceAccount: "jenkins"
                    slaveConnectTimeout: 100
                    yamlMergeStrategy: "override"

  # Resource limits
  resources:
    requests:
      cpu: "1000m"
      memory: "2Gi"
    limits:
      cpu: "2000m"
      memory: "4Gi"

  # Service account with additional permissions
  serviceAccount:
    create: true
    name: jenkins
    annotations:
      eks.amazonaws.com/role-arn: "arn:aws:iam::603480426027:role/jenkins-role"

# Additional RBAC for Jenkins to manage deployments
rbac:
  create: true
  readSecrets: true

serviceAccount:
  create: true
  name: jenkins
  annotations:
    eks.amazonaws.com/role-arn: "arn:aws:iam::603480426027:role/jenkins-role"

# Persistence configuration
persistence:
  enabled: true
  size: 20Gi
  storageClass: "gp3"
  accessMode: ReadWriteOnce
